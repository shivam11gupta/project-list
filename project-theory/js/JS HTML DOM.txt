*) <p id="demo"></p>
<script>
document.getElementById("demo").innerHTML = "Hello World!";
</script>

*) Method	Description
document.getElementById(id)	Find an element by element id
document.getElementsByTagName(name)	Find elements by tag name
document.getElementsByClassName(name)	Find elements by class name

*) Method	Description
document.createElement(element)	Create an HTML element
document.removeChild(element)	Remove an HTML element
document.appendChild(element)	Add an HTML element
document.replaceChild(new, old)	Replace an HTML element

*) element.setAttribute(attribute, value)	Change the attribute value of an HTML element

*) Method	Description
document.getElementById(id).onclick = function(){code}	Adding event handler code to an onclick event

*) If you want to find all HTML elements that match a specified CSS selector (id, class names, types, attributes, values of attributes, etc), use the querySelectorAll() method.
   const x = document.querySelectorAll("p.intro");

*) Changing HTML Content - 
   document.getElementById("p1").innerHTML = "New text!";

*) Changing the Value of an Attribute - 
    document.getElementById("myImage").src = "landscape.jpg";

*) In JavaScript, document.write() can be used to write directly to the HTML output stream:
   <p>Bla bla bla</p> 
<script>
document.write(Date());
</script>
<p>Bla bla bla</p>

*)Changing HTML Style - 
   document.getElementById("p2").style.color = "blue";
   <button type="button"
onclick="document.getElementById('id1').style.color = 'red'">
Click Me!</button>

*) document.getElementById("myBtn").addEventListener("click", displayDate);
   element.addEventListener("click", function(){ alert("Hello World!"); });

*) addEventListener(event, function, useCapture);
The default value is false, which will use the bubbling propagation, when the value is set to true, the event uses the capturing propagation.

*) element.removeEventListener("mousemove", myFunction);

*) Navigating Between Nodes
You can use the following node properties to navigate between nodes with JavaScript:

parentNode
childNodes[nodenumber]
firstChild
lastChild
nextSibling
previousSibling

*) myTitle = document.getElementById("demo").firstChild.nodeValue;
   document.getElementById("id02").innerHTML = document.getElementById("id01").childNodes[0].nodeValue;

*) Creating New HTML Elements (Nodes) 
    para = document.createElement("p");
    const node = document.createTextNode("This is a new paragraph.");
    para.appendChild(node);

*) Removing Existing HTML Elements
    const elmnt = document.getElementById("p1"); elmnt.remove();

*) An HTMLCollection object is an array-like list (collection) of HTML elements.
const myCollection = document.getElementsByTagName("p");
myCollection[1]  // 2nd p element of ducument ex - <p>1st</p>  <p>2nd</p> so answer will be 2nd

*) myCollection.length   // total length of selected element

*) 


