*) current can not use in project.

*) Local template variables with @let
   @let name = user.name;
@let greeting = 'Hello, ' + name;
@let data = data$ | async;
@let pi = 3.1459;
@let coordinates = {x: 50, y: 100};

*) A key difference between @let and JavaScript's let is that @let cannot be reassigned after declaration. However, Angular automatically keeps the variable's value up-to-date with the given expression.
@let value = 1;
<!-- Invalid - This does not work! -->
<button (click)="value = value + 1">Increment the value</button>

*) @let declarations are scoped to the current view and its descendants. Angular creates a new view at component boundaries and wherever a template might contain dynamic content, such as control flow blocks, @defer blocks, or structural directives.
   Since @let declarations are not hoisted, they cannot be accessed by parent views or siblings:

*) You can declare a variable on an element in a template by adding an attribute that starts with the hash character (#) followed by the variable name.
   <input #taskInput placeholder="Enter task name">
   export class AppComponent {
  // Query for the input element based on the template variable name.
  @ViewChild('taskInput') input: ElementRef | undefined;
}
